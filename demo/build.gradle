import org.gradle.internal.os.OperatingSystem

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

if(!project.hasProperty('platforms')) {
    switch (OperatingSystem.current()) {
        case OperatingSystem.LINUX:
            project.ext.platforms = "linux"
            break
        case OperatingSystem.MAC_OS:
            project.ext.platforms = "macos"
            break
        case OperatingSystem.WINDOWS:
            project.ext.platforms = "windows"
            break
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()

    // Use Jitpack for Gamma Engine dependencies.
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    // Gamma engine dependency.
    implementation 'com.github.Gamma-Engine.Engine:core:main-SNAPSHOT'

    project.ext.platforms.split(',').each {
        runtimeOnly "com.github.Gamma-Engine.Engine:natives-${it}:main-SNAPSHOT"
    }

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
}

application {
    // Define the main class for the application.
    mainClass = 'gamma.engine.Application'
}

jar {
    // Define manifest attributes for the JAR file.
    manifest {
        attributes 'Main-Class': 'gamma.engine.Application'
    }

    // Exclude duplicate files from the JAR file.
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    // Include dependencies in the JAR file.
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
