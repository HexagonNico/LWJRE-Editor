plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()

    // Use Jitpack for Gamma Engine dependencies.
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    // Gamma engine dependency.
    implementation 'com.github.Gamma-Engine.Engine:core:main-SNAPSHOT'

    // Use ImGui for editor gui.
    implementation 'io.github.spair:imgui-java-app:1.86.10'

    // Include all natives
    runtimeOnly 'com.github.Gamma-Engine.Engine:natives-linux:main-SNAPSHOT'
    runtimeOnly 'com.github.Gamma-Engine.Engine:natives-windows:main-SNAPSHOT'
    runtimeOnly 'com.github.Gamma-Engine.Engine:natives-macos:main-SNAPSHOT'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
}

application {
    // Define the main class for the application.
    mainClass = 'gamma.editor.EditorApplication'
}

run {
    // Define working directory when running the editor.
    workingDir = file('../demo')
}

jar {
    // Define manifest attributes for the JAR file.
    manifest {
        attributes 'Main-Class': 'gamma.editor.EditorApplication'
    }

    // Exclude duplicate files from the JAR file.
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    // Include dependencies in the JAR file.
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
